name: Push Actions

on: [push]

jobs:
  build:
    name: CI Build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: Setup Linux cache
      uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
         ${{ runner.os }}-pip-
    - name: Setup macOS cache
      uses: actions/cache@v1
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
         ${{ runner.os }}-pip-
    - name: Setup Windows cache
      uses: actions/cache@v1
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
         ${{ runner.os }}-pip-
    - name: Setup environment
      run: python -m pip install --disable-pip-version-check -r requirements.txt
    - name: Setup
      run: meson build
    - name: Build
      run: ninja -C build
    - name: Test
      run: ninja -C build test
  minify:
    name: File Minify
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup artifacts folder
      run: mkdir -p artifacts
    - name: Minify header
      run: sed -rb 's/[ ]*\/?\*\*?\/?.*|\/\/.*|.{0}$//g' assertions.h | sed -rb '/^\s*$/d' > artifacts/assertions.min.h
    - uses: actions/upload-artifact@v1
      with:
        name: Minified artifacts
        path: artifacts
